apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  serviceName: mongodb-service
  replicas: 3
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: mongodb
        maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: DoNotSchedule
      - labelSelector:
          matchLabels:
            app: mongodb        
        maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: DoNotSchedule
      volumes:
      - name: mongodb-keyfile
        secret:
          secretName: mongodb-keyfile-secret
          defaultMode: 0o400
      containers:
        - name: mongodb
          image: mongo:6.0.1
          command:
          - mongod
          - "--directoryperdb"
          - "--bind_ip_all"
          - "--auth"
          - "--wiredTigerCacheSizeGB=0.25"
          - "--oplogSize=1024"
          - "--replSet=k8s_rs"
          - "--keyFile=/etc/mongodb/keyfile"  
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: mongodb-map
                key: username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: password
          ports:
            - name: mongodb
              containerPort: 27017
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          volumeMounts:
          - name: mongodb-storage
            mountPath: /data/db
          - name: mongodb-keyfile
            mountPath: /etc/mongo/keyfile
            subPath: ./keyfile
            readOnly: true
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false # Aqui foi definido como false, pois pode ser necessário para o BD operar corretamente; Sempre que possível, defina como true, visto que é uma prática comum de segurança
  updateStrategy:
    type: onDelete
  volumeClaimTemplates:
  - metadata:
      name: mongodb-storage
      labels:
        app: mongodb
    spec:
      storageClassName: hdd
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 5Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: mongodb